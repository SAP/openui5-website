{"version":3,"sources":["webpack:///./src/components/Button/styles.module.css","webpack:///./src/components/List/index.js","webpack:///./src/components/List/styles.module.css","webpack:///./src/components/Slider/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Slider/styles.module.css","webpack:///./src/components/Button/index.js"],"names":["module","exports","List","column","style","justifyContent","children","className","classnames","styles","defaultProps","ListItem","slides","url","mod_germany2022","INVISIBLE_CLASS","state_invisible","Slider","useState","activeItem","setActiveItem","useEffect","length","intervalId","window","setInterval","nextItem","clearInterval","map","slide","idx","target","key","to","SliderItem","IndexPage","data","allFeaturesJson","startCoding","indexJson","Section","color","hasPadding","edges","node","Tile","align","title","description","icon","src","image","publicURL","alt","height","Text","size","marginBottom","font","width","maxWidth","margin","frameBorder","allowfullscren","button","Button","href","rel","props"],"mappings":"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","file":"component---src-pages-index-js-da3ad1cc8d0a1b3883c7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles-module--Button--2uSNj\",\"size_2\":\"styles-module--size_2--2Wg4X\",\"size_1\":\"styles-module--size_1--3hYIb\",\"color_transparent\":\"styles-module--color_transparent--vCCa3\",\"mod_download\":\"styles-module--mod_download--mqdT0\",\"Button__icon\":\"styles-module--Button__icon--23uSL\",\"Button__version\":\"styles-module--Button__version--2FXvE\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport getCssModifiers from \"../../utils/getCssModifiers\";\nimport _ from \"lodash\";\n\nconst List = ({ column, style, justifyContent, children }) => (\n    <div\n        className={classnames(\n            styles.List,\n            column ? styles[`column_${column}`] : null,\n            justifyContent ? styles[`justifyContent_${_.camelCase(justifyContent)}`] : null\n        )}\n        style={style}\n    >\n        {children}\n    </div>\n);\n\nList.defaultProps = {\n    column: null,\n    justifyContent: null,\n    style: null,\n};\n\n\nList.propTypes = {\n    column: PropTypes.oneOf(getCssModifiers(styles, \"column\")),\n    justifyContent: PropTypes.oneOf(getCssModifiers(styles, \"justifyContent\")),\n    style: PropTypes.object,\n};\n\nconst ListItem = ({ style, children }) => (\n    <div className={styles.ListItem} style={style}>{children}</div>\n);\n\nListItem.defaultProps = {\n    style: null,\n};\n\nListItem.propTypes = {\n    style: PropTypes.object,\n};\n\n\nexport {\n    List,\n    ListItem\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"styles-module--List--2A3GI\",\"ListItem\":\"styles-module--ListItem--GVdTX\",\"justifyContent_spaceBetween\":\"styles-module--justifyContent_spaceBetween--1-p-6\",\"column_1\":\"styles-module--column_1--lo9jP\",\"column_2\":\"styles-module--column_2--2FpOU\",\"column_3\":\"styles-module--column_3--1v7Zb\"};","import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport styles from \"./styles.module.css\";\n\nconst slides = [\n  {\n    url: \"/ui5con/germany2022/\",\n    className: styles.mod_germany2022,\n  }\n];\n\nconst INVISIBLE_CLASS = styles.state_invisible;\n\nconst Slider = () => {\n  const [ activeItem, setActiveItem ] = useState(0);\n\n  useEffect(() => {\n    if (slides.length < 2) {\n      return;\n    }\n\n    const intervalId = \twindow.setInterval(() => {\n      setActiveItem((activeItem) => {\n        let nextItem = activeItem + 1;\n        if (nextItem >= slides.length) {\n          nextItem = 0;\n        }\n        return nextItem;\n      });\n    }, 5000);\n\n    return () => {\n      window.clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div className={styles.Slider}>\n      {\n        slides.map((slide, idx) => (\n          <Link\n            target=\"_blank\"\n            key={idx}\n            to={slide.url}\n            className={classnames(\n              styles.SliderItem,\n              slide.className,\n              idx === activeItem ? null : INVISIBLE_CLASS,\n            )}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\n\nexport default Slider;\n","import React from \"react\";\nimport { graphql } from \"gatsby\"\n\nimport Section from \"../components/Section\";\nimport { List, ListItem } from \"../components/List\";\nimport Tile from \"../components/Tile\";\nimport Button from \"../components/Button\";\nimport Text from \"../components/Text\";\nimport Slider from \"../components/Slider\";\n\nconst IndexPage = ({ data: { allFeaturesJson, indexJson } }) => {\n    const { startCoding } = indexJson;\n    return (\n        <>\n            <Section color=\"lightblue\" hasPadding={false}>\n                <Slider />\n            </Section>\n            <Section>\n                <List column=\"3\">\n                    { allFeaturesJson.edges.map(({ node }, idx) => {\n                        return (\n                            <ListItem\n                                key={idx}\n                            >\n                                <Tile\n                                    align=\"center\"\n                                    title={node.title}\n                                    description={node.description}\n                                    icon={() => <img src={node.image.publicURL} alt={node.title} height=\"98\" />}\n                                />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Section>\n            <Section color=\"lightblue\" align=\"center\">\n                <Text size=\"1\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{startCoding.title}</Text>\n                <Text\n                    size=\"2\"\n                    font=\"light\"\n                    style={{\n                        width: \"73%\",\n                        maxWidth: \"1024px\",\n                        margin: \"0 auto 30px\"\n                    }}\n                >{startCoding.description}</Text>\n\n                <iframe\n                    title={startCoding.title}\n                    src=\"https://codesandbox.io/embed/ui5-example-pglil?fontsize=14&hidenavigation=1&module=%2Fwebapp%2Findex.html&theme=light\"\n                    style={{\n                        width: '100%',\n                        height: '500px',\n                        marginBottom: 'var(--default-margin)'\n                    }}\n                    frameBorder=\"0\"\n                    allowfullscren=\"allowfullscren\"\n                ></iframe>\n                {\n                    startCoding.button\n                    ? (\n                        <Button\n                            href={startCoding.button.url}\n                            rel=\"noopener\"\n                            target=\"_blank\"\n                            size=\"2\"\n                        >{startCoding.button.title}</Button>\n                    )\n                    : null\n                }\n            </Section>\n        </>\n    );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query {\n        allFeaturesJson {\n            edges {\n                node {\n                    title,\n                    description,\n                    image {\n                        publicURL\n                    }\n                }\n            }\n        }\n        indexJson {\n            startCoding {\n                title\n                description\n                button {\n                    title\n                    url\n                }\n            }\n        }\n    }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slider\":\"styles-module--Slider--35CoL\",\"SliderItem\":\"styles-module--SliderItem--12DDa\",\"state_invisible\":\"styles-module--state_invisible--2wXRm\",\"mod_ui5ers_live\":\"styles-module--mod_ui5ers_live--2GIY5\",\"mod_germany2022\":\"styles-module--mod_germany2022--NxMXu\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport getCssModifiers from \"../../utils/getCssModifiers\";\n\n\nconst Button = ({ children, size, href, target, ...props }) => {\n    // let linkTarget = target === null && !href.includes(document.location.host) ? \"_blank\" : target;\n    return (\n        <a\n            className={classnames(\n                styles.Button,\n                size ? styles[`size_${size}`] : null\n            )}\n            href={href}\n            // target={linkTarget}\n            {...props}\n        >{children}</a>\n    );\n};\n\nButton.defaultProps = {\n    size: \"1\",\n    target: null,\n    rel: \"noopener noreferrer\"\n};\n\nButton.propTypes = {\n    size: PropTypes.oneOf(getCssModifiers(styles, \"size\")),\n    target: PropTypes.string,\n    rel: PropTypes.string,\n};\n\n\nexport default Button;"],"sourceRoot":""}