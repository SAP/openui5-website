{"version":3,"sources":["webpack:///./src/pages/community.js","webpack:///./src/components/Icon/styles.module.css","webpack:///./src/components/Icon/index.js"],"names":["CommunityPage","data","communityJson","title","channels","connect","allEventsJson","size","style","marginBottom","map","idx","source","items","listStyle","justifyContent","length","key","item","icon","rest","flexBasis","marginRight","src","publicURL","align","column","module","exports","Icon","alt","imgStyle","className","classnames","styles","defaultProps"],"mappings":"iNA2EeA,UAhEO,SAAC,GAAD,QAAGC,KAAH,IAAWC,cAAiBC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,SAAUC,EAA7C,EAA6CA,QAA7C,EAAwDC,cAAxD,OAClB,oCACI,kBAAC,IAAD,CAAKH,MAAOA,IACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMI,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiCN,GAEnEC,EAASM,KAAI,WAAiBC,EAAKC,GAAY,IAAhCT,EAA+B,EAA/BA,MAAOU,EAAwB,EAAxBA,MACZC,EAAY,CACdC,eAAgB,cAOpB,OAJIJ,EAAM,IAAMC,EAAOI,SACnBF,EAAUL,aAAe,yCAIzB,kBAAC,WAAD,CAAUQ,IAAKN,GACX,kBAAC,IAAD,CAAMJ,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiCN,GACvE,kBAAC,IAAD,CAAMK,MAAOM,GAELD,EAAMH,KAAI,SAACQ,EAAMP,GACb,IAAQQ,EAAkBD,EAAlBC,KAASC,EAAjB,YAA0BF,EAA1B,UACA,OACI,kBAAC,IAAD,CACID,IAAKN,EACLH,MAAO,CACHa,UAAW,QACXC,YAAa,6BACbb,aAAc,+BAGlB,kBAAC,IAAD,eACIU,KAAM,kBAAM,kBAAC,IAAD,CAAMZ,KAAK,UAAUgB,IAAKJ,EAAKK,aAC3CC,MAAM,UACFL,cAYhD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMb,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiCJ,EAAQF,OAC/E,kBAAC,IAAD,CAAMuB,OAAO,IAAIX,eAAe,gBAC1BV,EAAQQ,MAAMH,KAAI,WAAoBC,GAAS,IAA1BQ,EAAyB,EAAzBA,KAASC,EAAgB,wBAC5C,OACI,kBAAC,IAAD,CAAUH,IAAKN,GACX,kBAAC,IAAD,eACIQ,KAAM,kBAAM,kBAAC,IAAD,CAAMZ,KAAK,QAAQgB,IAAKJ,EAAKK,cACrCJ,a,qBChEpCO,EAAOC,QAAU,CAAC,KAAO,6BAA6B,WAAa,mCAAmC,aAAe,uC,kCCDrH,mEAOMC,GAPN,UAOa,SAAC,GAAyC,IAAvCtB,EAAsC,EAAtCA,KAAMgB,EAAgC,EAAhCA,IAAKO,EAA2B,EAA3BA,IAAKtB,EAAsB,EAAtBA,MAAOuB,EAAe,EAAfA,SACnC,OACI,yBACIC,UAAWC,IACPC,IAAOL,KACPK,IAAO,QAAQ3B,IAEnBC,MAAOA,GAEP,yBAAKe,IAAKA,EAAKO,IAAKA,EAAKtB,MAAOuB,OAK5CF,EAAKM,aAAe,CAChB5B,KAAM,QACNuB,IAAK,KACLtB,MAAO,KACPuB,SAAU,MAWCF","file":"component---src-pages-community-js-0355ef4f54c0b24a7b31.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Section from \"../components/Section\";\nimport SEO from \"../components/seo\";\nimport Text from \"../components/Text\";\nimport { List, ListItem } from \"../components/List\";\nimport Tile from \"../components/Tile\";\nimport Icon from \"../components/Icon\";\n\n\nconst CommunityPage = ({ data: { communityJson: { title, channels, connect }, allEventsJson } }) => (\n    <>\n        <SEO title={title} />\n        <Section>\n            <Text size=\"1\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n            {\n                channels.map(({title, items}, idx, source) => {\n                    const listStyle = {\n                        justifyContent: \"flex-start\"\n                    };\n\n                    if (idx + 1 === source.length) {\n                        listStyle.marginBottom = \"calc(-1 * var(--default-margin-half))\";\n                    }\n\n                    return (\n                        <Fragment key={idx}>\n                            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n                            <List style={listStyle}>\n                                {\n                                    items.map((item, idx) => {\n                                        const { icon, ...rest } = item;\n                                        return (\n                                            <ListItem\n                                                key={idx}\n                                                style={{\n                                                    flexBasis: \"170px\",\n                                                    marginRight: \"var(--default-margin-half)\",\n                                                    marginBottom: \"var(--default-margin-half)\",\n                                                }}\n                                            >\n                                                <Tile\n                                                    icon={() => <Icon size=\"120x120\" src={icon.publicURL} />}\n                                                    align=\"center\"\n                                                    {...rest}\n                                                />\n                                            </ListItem>\n                                        );\n                                    })\n                                }\n                            </List>\n                        </Fragment>\n                    );\n                })\n            }\n        </Section>\n        <Section>\n            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{connect.title}</Text>\n            <List column=\"3\" justifyContent=\"spaceBetween\">\n                { connect.items.map(({ icon, ...rest }, idx) => {\n                    return (\n                        <ListItem key={idx}>\n                            <Tile\n                                icon={() => <Icon size=\"96x96\" src={icon.publicURL} />}\n                                {...rest}\n                            />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Section>\n    </>\n);\n\nexport default CommunityPage;\n\nexport const query = graphql`\n    query {\n        communityJson {\n            title\n            channels {\n                title\n                items {\n                    title\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n            connect {\n                title\n                items {\n                    title\n                    description\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n        }\n    }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"styles-module--Icon--IgQVY\",\"size_96x96\":\"styles-module--size_96x96--1w07_\",\"size_120x120\":\"styles-module--size_120x120--1QYU_\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport getCssModifiers from \"../../utils/getCssModifiers\";\n\n\nconst Icon = ({ size, src, alt, style, imgStyle }) => {\n    return (\n        <div\n            className={classnames(\n                styles.Icon,\n                styles[`size_${size}`]\n            )}\n            style={style}\n        >\n            <img src={src} alt={alt} style={imgStyle} />\n        </div>\n    );\n};\n\nIcon.defaultProps = {\n    size: \"96x96\",\n    alt: null,\n    style: null,\n    imgStyle: null,\n};\n\nIcon.propTypes = {\n    size: PropTypes.oneOf(getCssModifiers(styles, \"size\")),\n    alt: PropTypes.string,\n    style: PropTypes.object,\n    imgStyle: PropTypes.object,\n};\n\n\nexport default Icon;"],"sourceRoot":""}